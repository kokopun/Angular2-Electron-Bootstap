{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/index.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/app.component.html","webpack:///./src/app/components/temp/temp.component.html","webpack:///./src/app/components/home/custom-modal-sample.ts","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/temp/temp.component.ts","webpack:///./src/app/providers/electron.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 111\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from 'environments';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { HomeComponent } from './components/home/home.component';\nimport {TempComponent} from './components/temp/temp.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent\n    },\n     {\n        path: 'temp',\n        component: TempComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {useHash: true})],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { Component } from '@angular/core';\nimport { ElectronService } from './providers/electron.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public electronService: ElectronService) {\n\n    if(electronService.isElectron()) {\n      console.log('Mode electron');\n      // Check if electron is correctly injected (see externals in webpack.config.js)\n      console.log('c', electronService.ipcRenderer);\n      // Check if nodeJs childProcess is correctly injected (see externals in webpack.config.js)\n      console.log('c', electronService.childProcess);\n    } else {\n      console.log('Mode web');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import 'zone.js';\nimport 'reflect-metadata';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { ElectronService } from './providers/electron.service';\nimport { ModalModule } from 'angular2-modal';\nimport { BootstrapModalModule } from 'angular2-modal/plugins/bootstrap';\nimport { CustomModalContext, CustomModal } from './components/home/custom-modal-sample';\nimport {TempComponent} from './components/temp/temp.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CustomModal,\n    TempComponent\n  ],\n  imports: [\n    BrowserModule,\n     ModalModule.forRoot(),\n      BootstrapModalModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [ElectronService],\n  bootstrap: [AppComponent],\n  entryComponents: [CustomModal]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// This file contains development variables. (When you work in DEV MODE)\n// This file is use by webpack. Please don't rename it and don't move it to another directory.\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/index.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = 189\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.scss\n// module id = 190\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 191\n// module chunks = 1","module.exports = \"<h1>ok</h1>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/temp/temp.component.html\n// module id = 192\n// module chunks = 1","import { Component } from '@angular/core';\n\nimport { DialogRef, ModalComponent, CloseGuard } from 'angular2-modal';\nimport { BSModalContext } from 'angular2-modal/plugins/bootstrap';\n\nexport class CustomModalContext extends BSModalContext {\n  public num1: number;\n  public num2: number;\n}\n\n/**\n * A Sample of how simple it is to create a new window, with its own injects.\n */\n@Component({\n  selector: 'modal-content',\n  styles: [`\n        .custom-modal-container {\n            padding: 15px;\n        }\n\n        .custom-modal-header {\n            background-color: #219161;\n            color: #fff;\n            -webkit-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            -moz-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            margin-top: -15px;\n            margin-bottom: 40px;\n        }\n    `],\n  //TODO: [ngClass] here on purpose, no real use, just to show how to workaround ng2 issue #4330.\n  // Remove when solved.\n  /* tslint:disable */ template: `\n        <div class=\"container-fluid custom-modal-container\">\n            <div class=\"row custom-modal-header\">\n                <div class=\"col-sm-12\">\n                    <h1>A Custom modal design</h1>\n                </div>\n            </div>\n            <div class=\"row\" >\n                <div class=\"col-xs-12\">\n                    <div class=\"jumbotron\">\n                        <h1>Do the math to quit:</h1>\n                        <p class=\"lead\">I received an injection of the number <strong>{{context.num1}}</strong> and the number <strong>{{context.num2}}</strong></p>\n                        <span>What is the sum?</span>\n                         <input class=\"form-control\" type=\"text\" #answer (keyup)=\"onKeyUp(answer.value)\" autofocus>\n                    </div>\n                </div>\n            </div>\n        </div>`\n})\nexport class CustomModal implements CloseGuard, ModalComponent<CustomModalContext> {\n  context: CustomModalContext;\n\n  public wrongAnswer: boolean;\n\n  constructor(public dialog: DialogRef<CustomModalContext>) {\n    this.context = dialog.context;\n    this.wrongAnswer = true;\n    dialog.setCloseGuard(this);\n  }\n\n  onKeyUp(value) {\n    this.wrongAnswer = value != 5;\n    this.dialog.close();\n  }\n\n\n  beforeDismiss(): boolean {\n    return true;\n  }\n\n  beforeClose(): boolean {\n    return this.wrongAnswer;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/custom-modal-sample.ts","import { Component, OnInit , ViewContainerRef, ViewEncapsulation} from '@angular/core';\nimport { Overlay, overlayConfigFactory ,OverlayRenderer } from 'angular2-modal';\nimport { Modal, BSModalContext } from 'angular2-modal/plugins/bootstrap';\n\nimport { CustomModalContext, CustomModal } from './custom-modal-sample';\n\n@Component({\n  selector: 'app-home',\n // templateUrl: './home.component.html',\n   template: `\n  <span defaultOverlayTarget></span>\n  <h1>angular2-modal</h1>\n  <h2>Basic Modal sample</h2>\n  <button (click)=\"onClick()\">Alert</button>\n    <br>\n  <h2>Custom Modal example:</h2>\n  <button (click)=\"openCustom()\">Custom Modal</button>\n  <p>\n  <b>IMPORTANT:</b>\n  Since 'AdditionCalculateWindow' is never explicitly used (in a template)\n  we must tell angular about it by adding it to the <strong>entryComponents</strong> property in the module meta.\n  </p>\n  \n  <h2>See systemjs.config.js implementation for UMD vs module loading</h2>\n   <a routerLink=\"/temp\">Dashboard</a>\n  `,\n  styleUrls: ['./home.component.scss'],\n   providers: [Modal,Overlay]\n})\nexport class HomeComponent implements OnInit {\n  title = `App works !`;\n\n  constructor(public modal: Modal) {\n  }\n\n  ngOnInit() {\n  }\n onClick() {\n    this.modal.alert()\n        .size('lg')\n        .showClose(false)\n        .title('A simple Alert style modal window')\n        .body(`\n            <h4>Alert is a classic (title/body/footer) 1 button modal window that \n            does not block.</h4>\n            <b>Configuration:</b>\n            <ul>\n                <li>Non blocking (click anywhere outside to dismiss)</li>\n                <li>Size large</li>\n                <li>Dismissed with default keyboard key (ESC)</li>\n                <li>Close wth button click</li>\n                <li>HTML content</li>\n            </ul>`)\n        .open();\n  }\n  \n  openCustom() {\n\n \n\n\n   return this.modal.open(CustomModal,  overlayConfigFactory({ num1: 2, num2: 3 }, BSModalContext));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","import { Component, OnInit , ViewContainerRef, ViewEncapsulation} from '@angular/core';\nimport { Overlay, overlayConfigFactory ,OverlayRenderer } from 'angular2-modal';\nimport { Modal, BSModalContext } from 'angular2-modal/plugins/bootstrap';\n\n\n@Component({\n  selector: 'app-temp',\n  templateUrl: './temp.component.html',\n   providers: [Modal,Overlay]\n})\nexport class TempComponent implements OnInit {\n  title = `App works !`;\n\n  constructor(public modal: Modal) {\n  }\n\n  ngOnInit() {\n  }\n onClick() {\n    this.modal.alert()\n        .size('lg')\n        .showClose(false)\n        .title('A simple Alert style modal window')\n        .body(`\n            <h4>Alert is a classic (title/body/footer) 1 button modal window that \n            does not block.</h4>\n            <b>Configuration:</b>\n            <ul>\n                <li>Non blocking (click anywhere outside to dismiss)</li>\n                <li>Size large</li>\n                <li>Dismissed with default keyboard key (ESC)</li>\n                <li>Close wth button click</li>\n                <li>HTML content</li>\n            </ul>`)\n        .open();\n  }\n  \n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/temp/temp.component.ts","import { Injectable } from '@angular/core';\n\n// If you import a module but never use any of the imported values other than as TypeScript types,\n// the resulting javascript file will look as if you never imported the module at all.\nimport { ipcRenderer } from 'electron';\nimport * as childProcess from 'child_process';\n\n@Injectable()\nexport class ElectronService {\n\n  ipcRenderer: typeof ipcRenderer;\n  childProcess: typeof childProcess;\n\n  constructor() {\n    //Conditional imports\n    if (this.isElectron()) {\n      this.ipcRenderer = window.require('electron').ipcRenderer;\n      this.childProcess = window.require('child_process');\n    }\n  }\n\n  isElectron = () => {\n    return window && window.process && window.process.type;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/providers/electron.service.ts"],"sourceRoot":""}